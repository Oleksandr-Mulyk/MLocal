@using Local.Web.Data.ToDo

<PageTitle>Update ToDo @toDoViewModel.Title</PageTitle>

<h3>Update User @toDoViewModel.Title</h3>

<EditForm Model="toDoViewModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <PInputText OuterClass="mb-3" Label="Title" id="title" @bind-Value="toDoViewModel.Title" />

    <PInputSelect OuterClass="mb-3" Label="Stalus" id="status" @bind-Value="toDoViewModel.Status" Comment="@GetStatusComment()">
        @foreach (var status in statuses)
        {
            <option value="@status">@status</option>
        }
    </PInputSelect>

    <PInputTextArea OuterClass="mb-3" Label="Description" id="description" @bind-Value="toDoViewModel.Description" />

    <PInputDate Type="InputDateType.DateTimeLocal" OuterClass="mb-3" Label="Death Line" id="deathLine"
                @bind-Value="toDoViewModel.DeathLine" />

    <PInputSelect OuterClass="mb-3" Label="Assigned To" id="assignedTo" @bind-Value="toDoViewModel.AssignedTo">
        @foreach (var user in users)
        {
            <option value="@user.Id">@(user.UserName ?? user.Email)</option>
        }
    </PInputSelect>

    <PInputSelect OuterClass="mb-3" Label="Visible For" id="visibleFor" @bind-Value="toDoViewModel.VisibleFor">
        @foreach (var user in users)
        {
            <option value="@user.Id">@(user.UserName ?? user.Email)</option>
        }
    </PInputSelect>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>