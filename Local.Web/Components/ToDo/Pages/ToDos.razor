<PageTitle>@Loc["ToDo List"]</PageTitle>

<h3>@Loc["ToDo List"]</h3>

@if (toDoList == null)
{
    <p><em>@Loc["Loading..."]</em></p>
}
else
{
    <div class="accordion accordion-flush" id="accordionFilter">
        <div class="accordion-item">
            <h2 class="accordion-header" id="flushHeading">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseFilter" aria-expanded="false" aria-controls="flush-collapseOne">
                    @Loc["Filters"]
                </button>
            </h2>
            <div id="flush-collapseFilter" class="accordion-collapse collapse" aria-labelledby="flushHeading" data-bs-parent="#accordionFilter">
                <div class="accordion-body row">
                    <PInputText id="searchTitle" @bind-Value="@stringSearchValues[TITLE_COLUMN_NAME]" OuterClass="col-md-3"
                                @oninput="(e) => OnSearchChanged(TITLE_COLUMN_NAME, e.Value?.ToString() ?? string.Empty)"
                                Label='@Loc["Title"]' Validable="false" />

                    <PInputSelect id="searchStatus" @bind-Value="@stringSearchValues[STATUS_COLUMN_NAME]" OuterClass="col-md-3"
                                  @oninput="(e) => OnSearchChanged(STATUS_COLUMN_NAME, e.Value?.ToString() ?? string.Empty)"
                                  Label='@Loc["Status"]' Validable="false">
                        <option value="">All</option>
                        @foreach (var status in statuses)
                        {
                            <option value="@status">@status</option>
                        }
                    </PInputSelect>

                    <PInputText id="searchCreatedBy" @bind-Value="@stringSearchValues[CREATED_BY_COLUMN_NAME]" OuterClass="col-md-3"
                                @oninput="(e) => OnSearchChanged(CREATED_BY_COLUMN_NAME, e.Value?.ToString() ?? string.Empty)"
                                Label='@Loc["Created by"]' Validable="false" />

                    <PInputDate Type="InputDateType.DateTimeLocal" id="createdFrom" OuterClass="col-md-3"
                               @bind-Value='dateTimeSearchValues[CREATED_COLUMN_NAME + "_from"]'
                               @oninput='(e) => OnDateTimeSearchChanged(CREATED_COLUMN_NAME + "_from", e)'
                               Label='@Loc["Created from"]' Validable="false" />

                    <PInputDate Type="InputDateType.DateTimeLocal" id="createdTo" OuterClass="col-md-3"
                                @bind-Value='dateTimeSearchValues[CREATED_COLUMN_NAME + "_to"]'
                                @oninput='(e) => OnDateTimeSearchChanged(CREATED_COLUMN_NAME + "_to", e)'
                                Label='@Loc["Created to"]' Validable="false" />

                    <PInputText id="searchAssignedTo" @bind-Value="@stringSearchValues[ASSIGNED_TO_COLUMN_NAME]" OuterClass="col-md-3"
                                @oninput="(e) => OnSearchChanged(ASSIGNED_TO_COLUMN_NAME, e.Value?.ToString() ?? string.Empty)"
                                Label='@Loc["Assigned to"]' Validable="false" />

                    <PInputDate Type="InputDateType.DateTimeLocal" id="deathLineFrom" OuterClass="col-md-3"
                                @bind-Value='dateTimeSearchValues[DEATHLINE_COLUMN_NAME + "_from"]'
                                @oninput='(e) => OnDateTimeSearchChanged(DEATHLINE_COLUMN_NAME + "_from", e)'
                                Label='@Loc["Deathline from"]' Validable="false" />

                    <PInputDate Type="InputDateType.DateTimeLocal" id="deathLineTo" OuterClass="col-md-3"
                                @bind-Value='dateTimeSearchValues[DEATHLINE_COLUMN_NAME + "_to"]'
                                @oninput='(e) => OnDateTimeSearchChanged(DEATHLINE_COLUMN_NAME + "_to", e)'
                                Label='@Loc["Deathline to"]' Validable="false" />

                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <PInputSelect @bind-Value="currentSortColumn" id="currentSortColumn" Label='@Loc["Sort by"]' OuterClass="col-md-4"
                      @onclick="SortBy" Validable="false">
            @foreach (var column in sortColumns)
            {
                <option value="@column.Key">@Loc[column.Value]</option>
            }
        </PInputSelect>
        <PInputSelect @bind-Value="sortDirection" id="sortDirection" OuterClass="col-md-4" Label=" "
                      @onclick="SortBy" Validable="false">
            <option value="Ascending">@Loc["Ascending"]</option>
            <option value="Descending">@Loc["Descending"]</option>
        </PInputSelect>
    </div>

    <div class="row">
            @foreach (var toDo in toDoList)
            {
                <div class="col-md-4">
                    <h4>@toDo.Title</h4>
                    <p>@toDo.Status.ToString()</p>
                    <p>@Loc["Created"] @(toDo.CreatedBy.UserName ?? toDo.CreatedBy.Email) @toDo.Created</p>
                    <p>
                        @if (toDo.AssignedTo?.Count > 0)
                        {
                            @Loc["Assigned to:"]<br />
                            @((MarkupString)(toDo.AssignedTo
                            .Select(x => x.UserName ?? x.Email)
                            .Aggregate((x, y) => $"{x}<br/>{y}")
                            ))
                        }
                    </p>
                    <p>@toDo.DeathLine.ToString()</p>
                    <p>
                        <button class="btn btn-primary" @onclick="() => NavigateToEditToDo(toDo.Id)">@Loc["View"]</button>
                        <button class="btn btn-danger" @onclick="() => NavigateToDeleteToDo(toDo.Id)">@Loc["Delete"]</button>
                    </p>
                </div>
            }
    </div>
    <Pagination TotalItems="totalCount" CurrentPage="currentPage" OnPageChanged="LoadPageAsync" />
}

<button class="btn btn-success" @onclick="NavigateToCreateToDo">@Loc["Create New ToDo"]</button>
